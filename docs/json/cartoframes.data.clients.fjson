{"parents": [], "prev": null, "next": null, "title": "cartoframes.data.clients package", "meta": {}, "body": "<div class=\"section\" id=\"cartoframes-data-clients-package\">\n<h1>cartoframes.data.clients package<a class=\"headerlink\" href=\"#cartoframes-data-clients-package\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"submodules\">\n<h2>Submodules<a class=\"headerlink\" href=\"#submodules\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"toctree-wrapper compound\">\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../cartoframes.data.clients.data_obs_client/\">cartoframes.data.clients.data_obs_client module</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../cartoframes.data.clients.sql_client/\">cartoframes.data.clients.sql_client module</a></li>\n</ul>\n</div>\n</div>\n<div class=\"section\" id=\"module-cartoframes.data.clients\">\n<span id=\"module-contents\"></span><h2>Module contents<a class=\"headerlink\" href=\"#module-cartoframes.data.clients\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"cartoframes.data.clients.SQLClient\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">cartoframes.data.clients.</code><code class=\"sig-name descname\">SQLClient</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">credentials=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>SQLClient class is a client to run SQL queries in a CARTO account.\nNote: for long running SELECT queries affected by database timeouts it\u2019s\nrecommended to use the <a class=\"reference internal\" href=\"../cartoframes.data/#cartoframes.data.Dataset\" title=\"cartoframes.data.Dataset\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dataset</span></code></a> class.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>credentials</strong> (<a class=\"reference internal\" href=\"../cartoframes.auth/#cartoframes.auth.Credentials\" title=\"cartoframes.auth.Credentials\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Credentials</span></code></a>) \u2013 A <a class=\"reference internal\" href=\"../cartoframes.auth/#cartoframes.auth.Credentials\" title=\"cartoframes.auth.Credentials\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Credentials</span></code></a>\ninstance can be used in place of a <cite>username`|`base_url</cite> / <cite>api_key</cite> combination.</p>\n</dd>\n</dl>\n<p class=\"rubric\">Example</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">cartoframes.auth</span> <span class=\"k\">import</span> <span class=\"n\">Credentials</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cartoframes.client</span> <span class=\"k\">import</span> <span class=\"n\">SQLClient</span>\n\n<span class=\"n\">credentials</span> <span class=\"o\">=</span> <span class=\"n\">Credentials</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">&#39;&lt;USER NAME&gt;&#39;</span><span class=\"p\">,</span> <span class=\"n\">api_key</span><span class=\"o\">=</span><span class=\"s1\">&#39;&lt;API KEY&gt;&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">sql</span> <span class=\"o\">=</span> <span class=\"n\">SQLClient</span><span class=\"p\">(</span><span class=\"n\">credentials</span><span class=\"p\">)</span>\n\n<span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s1\">&#39;SELECT * FROM table_name&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s1\">&#39;DROP TABLE table_name&#39;</span><span class=\"p\">)</span>\n\n<span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">distinct</span><span class=\"p\">(</span><span class=\"s1\">&#39;table_name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;column_name&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">sql</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s1\">&#39;table_name&#39;</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre></div>\n</div>\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.bounds\">\n<code class=\"sig-name descname\">bounds</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">query</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.bounds\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the bounds of the geometries in a table.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.count\">\n<code class=\"sig-name descname\">count</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.count\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the number of elements of a table.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.create_table\">\n<code class=\"sig-name descname\">create_table</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em>, <em class=\"sig-param\">columns</em>, <em class=\"sig-param\">cartodbfy=True</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.create_table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Create a table with a specific table name and columns.\nBy default, geometry columns are added to the table.\nTo disable this pass <cite>cartodbfy=False</cite>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.describe\">\n<code class=\"sig-name descname\">describe</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em>, <em class=\"sig-param\">column_name</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.describe\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Show information about a column in a specific table.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.distinct\">\n<code class=\"sig-name descname\">distinct</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em>, <em class=\"sig-param\">column_name</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.distinct\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the distict values and their count in a table\nfor a specific column.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.drop_table\">\n<code class=\"sig-name descname\">drop_table</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.drop_table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Remove a table from its table name.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.execute\">\n<code class=\"sig-name descname\">execute</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">query</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.execute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run a long running query. It returns an object with the\nstatus and information of the job. For more information check the <cite>Batch API\ndocumentation\n&lt;https://carto.com/developers/sql-api/reference/#tag/Batch-Queries&gt;</cite>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.insert_table\">\n<code class=\"sig-name descname\">insert_table</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em>, <em class=\"sig-param\">columns</em>, <em class=\"sig-param\">values</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.insert_table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.query\">\n<code class=\"sig-name descname\">query</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">query</em>, <em class=\"sig-param\">verbose=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.query\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Run a SQL query. It returns a <cite>list</cite> with content of the response.\nIf the <cite>verbose</cite> param is True it returns the full SQL response in a <cite>dict</cite>.\nFor more information check the <cite>SQL API\ndocumentation\n&lt;https://carto.com/developers/sql-api/reference/#tag/Single-SQL-Statement&gt;</cite>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.rename_table\">\n<code class=\"sig-name descname\">rename_table</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em>, <em class=\"sig-param\">new_table_name</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.rename_table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Rename a table from its table name.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.schema\">\n<code class=\"sig-name descname\">schema</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em>, <em class=\"sig-param\">raw=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.schema\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Show information about the schema of a table.\nSetting raw=True is returns a Python dict with the data.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.SQLClient.update_table\">\n<code class=\"sig-name descname\">update_table</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em>, <em class=\"sig-param\">column_name</em>, <em class=\"sig-param\">value</em>, <em class=\"sig-param\">condition</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.SQLClient.update_table\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Update the column\u2019s value for the rows that match the condition.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"cartoframes.data.clients.DataObsClient\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">cartoframes.data.clients.</code><code class=\"sig-name descname\">DataObsClient</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">credentials=None</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.DataObsClient\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>Data Observatory v1 class. <a class=\"reference external\" href=\"https://carto.com/developers/data-observatory/\">Data Observatory documentation</a>.</p>\n<dl class=\"simple\">\n<dt>This class provides the following methods to interact with Data Observatory:</dt><dd><ul class=\"simple\">\n<li><p>boundary: returns a <a class=\"reference internal\" href=\"../cartoframes.data/#cartoframes.data.Dataset\" title=\"cartoframes.data.Dataset\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dataset</span></code></a> with\nthe geographic boundaries (geometries) or their metadata.</p></li>\n<li><p>discovery: returns a pandas.DataFrame with the measures found.</p></li>\n<li><p>augment: returns a <a class=\"reference internal\" href=\"../cartoframes.data/#cartoframes.data.Dataset\" title=\"cartoframes.data.Dataset\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dataset</span></code></a> with the augmented data.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>credentials</strong> (<a class=\"reference internal\" href=\"../cartoframes.auth/#cartoframes.auth.Credentials\" title=\"cartoframes.auth.Credentials\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Credentials</span></code></a>) \u2013 A <a class=\"reference internal\" href=\"../cartoframes.auth/#cartoframes.auth.Credentials\" title=\"cartoframes.auth.Credentials\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Credentials</span></code></a>\ninstance can be used in place of a <cite>username`|`base_url</cite> / <cite>api_key</cite> combination.</p>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.DataObsClient.augment\">\n<code class=\"sig-name descname\">augment</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">table_name</em>, <em class=\"sig-param\">metadata</em>, <em class=\"sig-param\">persist_as=None</em>, <em class=\"sig-param\">how='the_geom'</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.DataObsClient.augment\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get an augmented CARTO dataset with <a class=\"reference external\" href=\"https://carto.com/data-observatory\">Data Observatory</a> measures. Use\n<a class=\"reference external\" href=\"#DataObsClient.discovery\">DataObsClient.discovery</a> to search for available\nmeasures, or see the full <a class=\"reference external\" href=\"https://cartodb.github.io/bigmetadata/index.html\">Data Observatory catalog</a>. Optionally\npersist the data as a new table.</p>\n<p class=\"rubric\">Example</p>\n<p>Get a DataFrame with Data Observatory measures based on the\ngeometries in a CARTO table.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">cartoframes.auth</span> <span class=\"k\">import</span> <span class=\"n\">Credentials</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cartoframes.client</span> <span class=\"k\">import</span> <span class=\"n\">DataObsClient</span>\n<span class=\"n\">creds</span> <span class=\"o\">=</span> <span class=\"n\">Credentials</span><span class=\"p\">(</span><span class=\"s1\">&#39;user name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;api key&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">do</span> <span class=\"o\">=</span> <span class=\"n\">DataObsClient</span><span class=\"p\">(</span><span class=\"n\">creds</span><span class=\"p\">)</span>\n<span class=\"n\">median_income</span> <span class=\"o\">=</span> <span class=\"n\">do</span><span class=\"o\">.</span><span class=\"n\">discovery</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;transaction_events&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">regex</span><span class=\"o\">=</span><span class=\"s1\">&#39;.*median income.*&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s1\">&#39;2011 - 2015&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">do</span><span class=\"o\">.</span><span class=\"n\">augment</span><span class=\"p\">(</span><span class=\"s1\">&#39;transaction_events&#39;</span><span class=\"p\">,</span> <span class=\"n\">median_income</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Pass in cherry-picked measures from the Data Observatory catalog.\nThe rest of the metadata will be filled in, but it\u2019s important to\nspecify the geographic level as this will not show up in the column\nname.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">median_income</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s1\">&#39;numer_id&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;us.census.acs.B19013001&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s1\">&#39;geom_id&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;us.census.tiger.block_group&#39;</span><span class=\"p\">,</span>\n                  <span class=\"s1\">&#39;numer_timespan&#39;</span><span class=\"p\">:</span> <span class=\"s1\">&#39;2011 - 2015&#39;</span><span class=\"p\">}]</span>\n<span class=\"n\">ds</span> <span class=\"o\">=</span> <span class=\"n\">do</span><span class=\"o\">.</span><span class=\"n\">augment</span><span class=\"p\">(</span><span class=\"s1\">&#39;transaction_events&#39;</span><span class=\"p\">,</span> <span class=\"n\">median_income</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>table_name</strong> (<em>str</em>) \u2013 Name of table on CARTO account that Data\nObservatory measures are to be added to.</p></li>\n<li><p><strong>metadata</strong> (<em>pandas.DataFrame</em>) \u2013 List of all measures to add to\n<cite>table_name</cite>. See <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">DataObsClient.discovery</span></code> outputs\nfor a full list of metadata columns.</p></li>\n<li><p><strong>persist_as</strong> (<em>str</em><em>, </em><em>optional</em>) \u2013 Output the results of augmenting\n<cite>table_name</cite> to <cite>persist_as</cite> as a persistent table on CARTO.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>, which will not create a table.</p></li>\n<li><p><strong>how</strong> (<em>str</em><em>, </em><em>optional</em>) \u2013 Column name for\nidentifying the geometry from which to fetch the data. Defaults\nto <cite>the_geom</cite>, which results in measures that are spatially\ninterpolated (e.g., a neighborhood boundary\u2019s population will\nbe calculated from underlying census tracts). Specifying a\ncolumn that has the geometry identifier (for example, GEOID for\nUS Census boundaries), results in measures directly from the\nCensus for that GEOID but normalized how it is specified in the\nmetadata.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A Dataset representation of <cite>table_name</cite> which\nhas new columns for each measure in <cite>metadata</cite>.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../cartoframes.data/#cartoframes.data.Dataset\" title=\"cartoframes.data.Dataset\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dataset</span></code></a></p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><strong>NameError</strong> \u2013 If the columns in <cite>table_name</cite> are in the\n    <code class=\"docutils literal notranslate\"><span class=\"pre\">suggested_name</span></code> column of <cite>metadata</cite>.</p></li>\n<li><p><strong>ValueError</strong> \u2013 If metadata object is invalid or empty, or if the\n    number of requested measures exceeds 50.</p></li>\n<li><p><strong>CartoException</strong> \u2013 If user account consumes all of Data Observatory\n    quota</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.DataObsClient.boundaries\">\n<code class=\"sig-name descname\">boundaries</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">boundary=None</em>, <em class=\"sig-param\">region=None</em>, <em class=\"sig-param\">decode_geom=False</em>, <em class=\"sig-param\">timespan=None</em>, <em class=\"sig-param\">include_nonclipped=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.DataObsClient.boundaries\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Find all boundaries available for the world or a <cite>region</cite>. If\n<cite>boundary</cite> is specified, get all available boundary polygons for the\nregion specified (if any). This method is especially useful for getting\nboundaries for a region and, with <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">DataObsClient.augment</span></code> and\n<code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">DataObsClient.discovery</span></code>, getting tables of\ngeometries and the corresponding raw measures. For example, if you want\nto analyze how median income has changed in a region (see examples\nsection for more).</p>\n<p class=\"rubric\">Examples</p>\n<p>Find all boundaries available for Australia. The columns\n<cite>geom_name</cite> gives us the name of the boundary and <cite>geom_id</cite>\nis what we need for the <cite>boundary</cite> argument.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">cartoframes.auth</span> <span class=\"kn\">import</span> <span class=\"n\">Credentials</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cartoframes.client</span> <span class=\"kn\">import</span> <span class=\"n\">DataObsClient</span>\n<span class=\"n\">creds</span> <span class=\"o\">=</span> <span class=\"n\">Credentials</span><span class=\"p\">(</span><span class=\"s1\">&#39;user name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;api key&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">do</span> <span class=\"o\">=</span> <span class=\"n\">DataObsClient</span><span class=\"p\">(</span><span class=\"n\">creds</span><span class=\"p\">)</span>\n<span class=\"n\">au_boundaries</span> <span class=\"o\">=</span> <span class=\"n\">do</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"o\">=</span><span class=\"s1\">&#39;Australia&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">au_boundaries</span><span class=\"o\">.</span><span class=\"n\">dataframe</span><span class=\"p\">[[</span><span class=\"s1\">&#39;geom_name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;geom_id&#39;</span><span class=\"p\">]]</span>\n</pre></div>\n</div>\n<p>Get the boundaries for Australian Postal Areas and map them.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">cartoframes.viz</span> <span class=\"kn\">import</span> <span class=\"n\">Layer</span>\n<span class=\"n\">au_postal_areas</span> <span class=\"o\">=</span> <span class=\"n\">do</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"p\">(</span><span class=\"n\">boundary</span><span class=\"o\">=</span><span class=\"s1\">&#39;au.geo.POA&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">Layer</span><span class=\"p\">(</span><span class=\"n\">au_postal_areas</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<p>Get census tracts around Idaho Falls, Idaho, USA, and add median\nincome from the US census. Without limiting the metadata, we get\nmedian income measures for each census in the Data Observatory.</p>\n<div class=\"highlight-python notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"kn\">from</span> <span class=\"nn\">cartoframes.auth</span> <span class=\"kn\">import</span> <span class=\"n\">Credentials</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cartoframes.client</span> <span class=\"kn\">import</span> <span class=\"n\">DataObsClient</span>\n<span class=\"n\">credentials</span> <span class=\"o\">=</span> <span class=\"n\">Credentials</span><span class=\"p\">(</span><span class=\"s1\">&#39;user name&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;api key&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># Note: default credentials will be supported in a future release</span>\n<span class=\"n\">do</span> <span class=\"o\">=</span> <span class=\"n\">DataObsClient</span><span class=\"p\">(</span><span class=\"n\">credentials</span><span class=\"p\">)</span>\n<span class=\"c1\"># will return Dataset with columns `the_geom` and `geom_ref`</span>\n<span class=\"n\">tracts</span> <span class=\"o\">=</span> <span class=\"n\">do</span><span class=\"o\">.</span><span class=\"n\">boundaries</span><span class=\"p\">(</span>\n    <span class=\"n\">boundary</span><span class=\"o\">=</span><span class=\"s1\">&#39;us.census.tiger.census_tract&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">region</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mf\">112.096642</span><span class=\"p\">,</span><span class=\"mf\">43.429932</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mf\">111.974213</span><span class=\"p\">,</span><span class=\"mf\">43.553539</span><span class=\"p\">])</span>\n<span class=\"c1\"># write geometries to a CARTO table</span>\n<span class=\"n\">tracts</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span><span class=\"s1\">&#39;idaho_falls_tracts&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># gather metadata needed to look up median income</span>\n<span class=\"n\">median_income_meta</span> <span class=\"o\">=</span> <span class=\"n\">do</span><span class=\"o\">.</span><span class=\"n\">discovery</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;idaho_falls_tracts&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">keywords</span><span class=\"o\">=</span><span class=\"s1\">&#39;median income&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">boundaries</span><span class=\"o\">=</span><span class=\"s1\">&#39;us.census.tiger.census_tract&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># get median income data and original table as new Dataset</span>\n<span class=\"n\">idaho_falls_income</span> <span class=\"o\">=</span> <span class=\"n\">do</span><span class=\"o\">.</span><span class=\"n\">augment</span><span class=\"p\">(</span>\n    <span class=\"s1\">&#39;idaho_falls_tracts&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">median_income_meta</span><span class=\"p\">,</span>\n    <span class=\"n\">how</span><span class=\"o\">=</span><span class=\"s1\">&#39;geom_refs&#39;</span><span class=\"p\">)</span>\n<span class=\"c1\"># overwrite existing table with newly-enriched Dataset</span>\n<span class=\"n\">idaho_falls_income</span><span class=\"o\">.</span><span class=\"n\">upload</span><span class=\"p\">(</span><span class=\"s1\">&#39;idaho_falls_tracts&#39;</span><span class=\"p\">,</span> <span class=\"n\">if_exists</span><span class=\"o\">=</span><span class=\"s1\">&#39;replace&#39;</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>boundary</strong> (<em>str</em><em>, </em><em>optional</em>) \u2013 Boundary identifier for the boundaries\nthat are of interest. For example, US census tracts have a\nboundary ID of <code class=\"docutils literal notranslate\"><span class=\"pre\">us.census.tiger.census_tract</span></code>, and Brazilian\nMunicipios have an ID of <code class=\"docutils literal notranslate\"><span class=\"pre\">br.geo.municipios</span></code>. Find IDs by\nrunning <code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">DataObsClient.boundaries</span></code>\nwithout any arguments, or by looking in the <a class=\"reference external\" href=\"http://cartodb.github.io/bigmetadata/\">Data Observatory\ncatalog</a>.</p></li>\n<li><p><strong>region</strong> (<em>str</em><em>, </em><em>optional</em>) \u2013 <p>Region where boundary information or,\nif <cite>boundary</cite> is specified, boundary polygons are of interest.\n<cite>region</cite> can be one of the following:</p>\n<blockquote>\n<div><ul>\n<li><p>table name (str): Name of a table in user\u2019s CARTO account</p></li>\n<li><p>bounding box (list of float): List of four values (two\nlng/lat pairs) in the following order: western longitude,\nsouthern latitude, eastern longitude, and northern latitude.\nFor example, Switzerland fits in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">[5.9559111595,45.8179931641,10.4920501709,47.808380127]</span></code></p></li>\n</ul>\n</div></blockquote>\n</p></li>\n<li><p><strong>timespan</strong> (<em>str</em><em>, </em><em>optional</em>) \u2013 Specific timespan to get geometries from.\nDefaults to use the most recent. See the Data Observatory catalog\nfor more information.</p></li>\n<li><p><strong>decode_geom</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Whether to return the geometries as\nShapely objects or keep them encoded as EWKB strings. Defaults\nto False.</p></li>\n<li><p><strong>include_nonclipped</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Optionally include\nnon-shoreline-clipped boundaries. These boundaries are the raw\nboundaries provided by, for example, US Census Tiger.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>If <cite>boundary</cite> is specified, then all available\nboundaries and accompanying <cite>geom_refs</cite> in <cite>region</cite> (or the world\nif <cite>region</cite> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> or not specified) are returned. If\n<cite>boundary</cite> is not specified, then a Dataset of all available\nboundaries in <cite>region</cite> (or the world if <cite>region</cite> is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>).</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../cartoframes.data/#cartoframes.data.Dataset\" title=\"cartoframes.data.Dataset\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Dataset</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"cartoframes.data.clients.DataObsClient.discovery\">\n<code class=\"sig-name descname\">discovery</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">region</em>, <em class=\"sig-param\">keywords=None</em>, <em class=\"sig-param\">regex=None</em>, <em class=\"sig-param\">time=None</em>, <em class=\"sig-param\">boundaries=None</em>, <em class=\"sig-param\">include_quantiles=False</em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#cartoframes.data.clients.DataObsClient.discovery\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Discover Data Observatory measures. This method returns the full\nData Observatory metadata model for each measure or measures that\nmatch the conditions from the inputs. The full metadata in each row\nuniquely defines a measure based on the timespan, geographic\nresolution, and normalization (if any). Read more about the metadata\nresponse in <a class=\"reference external\" href=\"https://carto.com/developers/data-observatory/reference/#discovery-functions\">Data Observatory</a>\ndocumentation.</p>\n<p>Internally, this method finds all measures in <cite>region</cite> that match the\nconditions set in <cite>keywords</cite>, <cite>regex</cite>, <cite>time</cite>, and <cite>boundaries</cite> (if\nany of them are specified). Then, if <cite>boundaries</cite> is not specified, a\ngeographical resolution for that measure will be chosen subject to the\ntype of region specified:</p>\n<blockquote>\n<div><ol class=\"arabic simple\">\n<li><p>If <cite>region</cite> is a table name, then a geographical resolution that\nis roughly equal to <cite>region size / number of subunits</cite>.</p></li>\n<li><p>If <cite>region</cite> is a country name or bounding box, then a geographical\nresolution will be chosen roughly equal to <cite>region size / 500</cite>.</p></li>\n</ol>\n</div></blockquote>\n<p>Since different measures are in some geographic resolutions and not\nothers, different geographical resolutions for different measures are\noftentimes returned.</p>\n<div class=\"admonition tip\">\n<p class=\"admonition-title\">Tip</p>\n<p>To remove the guesswork in how geographical resolutions are\nselected, specify one or more boundaries in <cite>boundaries</cite>. See\nthe boundaries section for each region in the <a class=\"reference external\" href=\"http://cartodb.github.io/bigmetadata/\">Data Observatory\ncatalog</a>.</p>\n</div>\n<p>The metadata returned from this method can then be used to create raw\ntables or for augmenting an existing table from these measures using\n<code class=\"xref py py-meth docutils literal notranslate\"><span class=\"pre\">DataObsClient.augment</span></code>.\nFor the full Data Observatory catalog, visit\n<a class=\"reference external\" href=\"https://cartodb.github.io/bigmetadata/\">https://cartodb.github.io/bigmetadata/</a>. When working with the metadata\nDataFrame returned from this method, be careful to only remove rows not\ncolumns as <cite>DataObsClient.augment &lt;cartoframes.client.DataObsClient.augment&gt;</cite>\ngenerally needs the full metadata.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Narrowing down a discovery query using the <cite>keywords</cite>, <cite>regex</cite>, and\n<cite>time</cite> filters is important for getting a manageable metadata\nset. Besides there being a large number of measures in the DO, a\nmetadata response has acceptable combinations of measures with\ndemonimators (normalization and density), and the same measure from\nother years.</p>\n<p>For example, setting the region to be United States counties with\nno filter values set will result in many thousands of measures.</p>\n</div>\n<p class=\"rubric\">Examples</p>\n<p>Get all European Union measures that mention <code class=\"docutils literal notranslate\"><span class=\"pre\">freight</span></code>.</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"n\">freight_meta</span> <span class=\"o\">=</span> <span class=\"n\">do</span><span class=\"o\">.</span><span class=\"n\">discovery</span><span class=\"p\">(</span><span class=\"s1\">&#39;European Union&#39;</span><span class=\"p\">,</span>\n                       <span class=\"n\">keywords</span><span class=\"o\">=</span><span class=\"s1\">&#39;freight&#39;</span><span class=\"p\">,</span>\n                       <span class=\"n\">time</span><span class=\"o\">=</span><span class=\"s1\">&#39;2010&#39;</span><span class=\"p\">)</span>\n<span class=\"n\">freight_meta</span><span class=\"p\">[</span><span class=\"s1\">&#39;numer_name&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>region</strong> (<em>str</em><em> or </em><em>list of float</em>) \u2013 <p>Information about the region of\ninterest. <cite>region</cite> can be one of three types:</p>\n<blockquote>\n<div><ul>\n<li><p>region name (str): Name of region of interest. Acceptable\nvalues are limited to: \u2018Australia\u2019, \u2018Brazil\u2019, \u2018Canada\u2019,\n\u2018European Union\u2019, \u2018France\u2019, \u2018Mexico\u2019, \u2018Spain\u2019,\n\u2018United Kingdom\u2019, \u2018United States\u2019.</p></li>\n<li><p>table name (str): Name of a table in user\u2019s CARTO account\nwith geometries. The region will be the bounding box of\nthe table.</p>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>If a table name is also a valid Data Observatory\nregion name, the Data Observatory name will be chosen\nover the table.</p>\n</div>\n</li>\n<li><p>bounding box (list of float): List of four values (two\nlng/lat pairs) in the following order: western longitude,\nsouthern latitude, eastern longitude, and northern latitude.\nFor example, Switzerland fits in\n<code class=\"docutils literal notranslate\"><span class=\"pre\">[5.9559111595,45.8179931641,10.4920501709,47.808380127]</span></code></p></li>\n</ul>\n<div class=\"admonition note\">\n<p class=\"admonition-title\">Note</p>\n<p>Geometry levels are generally chosen by subdividing\nthe region into the next smallest administrative unit. To\noverride this behavior, specify the <cite>boundaries</cite> flag. For\nexample, set <cite>boundaries</cite> to\n<code class=\"docutils literal notranslate\"><span class=\"pre\">'us.census.tiger.census_tract'</span></code> to choose US census\ntracts.</p>\n</div>\n</div></blockquote>\n</p></li>\n<li><p><strong>keywords</strong> (<em>str</em><em> or </em><em>list of str</em><em>, </em><em>optional</em>) \u2013 Keyword or list of\nkeywords in measure description or name. Response will be matched\non all keywords listed (boolean <cite>or</cite>).</p></li>\n<li><p><strong>regex</strong> (<em>str</em><em>, </em><em>optional</em>) \u2013 A regular expression to search the measure\ndescriptions and names. Note that this relies on PostgreSQL\u2019s\ncase insensitive operator <code class=\"docutils literal notranslate\"><span class=\"pre\">~*</span></code>. See <a class=\"reference external\" href=\"https://www.postgresql.org/docs/9.5/static/functions-matching.html\">PostgreSQL docs</a>\nfor more information.</p></li>\n<li><p><strong>boundaries</strong> (<em>str</em><em> or </em><em>list of str</em><em>, </em><em>optional</em>) \u2013 Boundary or list of\nboundaries that specify the measure resolution. See the\nboundaries section for each region in the <a class=\"reference external\" href=\"http://cartodb.github.io/bigmetadata/\">Data Observatory\ncatalog</a>.</p></li>\n<li><p><strong>include_quantiles</strong> (<em>bool</em><em>, </em><em>optional</em>) \u2013 Include quantiles calculations\nwhich are a calculation of how a measure compares to all measures\nin the full dataset. Defaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">False</span></code>. If <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>,\nquantiles columns will be returned for each column which has it\npre-calculated.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>A dataframe of the complete metadata model for\nspecific measures based on the search parameters.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>pandas.DataFrame</p>\n</dd>\n<dt class=\"field-even\">Raises</dt>\n<dd class=\"field-even\"><ul class=\"simple\">\n<li><p><strong>ValueError</strong> \u2013 If <cite>region</cite> is a <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">list</span></code> and does not consist of\n    four elements, or if <cite>region</cite> is not an acceptable region</p></li>\n<li><p><strong>CartoException</strong> \u2013 If <cite>region</cite> is not a table in user account</p></li>\n</ul>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n", "metatags": "", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"]], "sourcename": "cartoframes.data.clients.rst.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">cartoframes.data.clients package</a><ul>\n<li><a class=\"reference internal\" href=\"#submodules\">Submodules</a></li>\n<li><a class=\"reference internal\" href=\"#module-cartoframes.data.clients\">Module contents</a></li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".rst", "current_page_name": "cartoframes.data.clients", "sidebars": ["localtoc.html", "relations.html", "sourcelink.html", "searchbox.html"], "customsidebar": null, "alabaster_version": "0.7.12"}